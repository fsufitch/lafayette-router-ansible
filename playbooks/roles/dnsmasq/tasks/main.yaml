---

- name: Install Podman
  ansible.builtin.dnf:
    state: present
    name: podman

- name: Create DHCP configuration file
  ansible.builtin.template:
    dest: /opt/lafayette/dnsmasq/{{ dnsmasq_.id }}/dnsmasq.conf
    mode: "0644"
    owner: root
    group: root
    src: dnsmasq.conf.j2
  register: dhcp_config_result

- name: Create/update dnsmasq container
  containers.podman.podman_container:
    name: "dnsmasq-{{ dnsmasq_.id }}"
    image: docker.io/strm/dnsmasq
    state: present
    recreate: true
    ports:
      - "{{ dnsmasq_.ipv4 }}:53:53/udp"
      - "{{ dnsmasq_.ipv4 }}:53:53/tcp"
      - "{{ dnsmasq_.ipv4 }}:67:67/udp"
      - "{{ dnsmasq_.ipv4 }}:68:68/udp"
    cap_add:
      - NET_ADMIN
      - NET_BIND_SERVICE
      - NET_BROADCAST
      - NET_RAW
    volumes:
      - /opt/lafayette/dnsmasq/{{ dnsmasq_.id }}/dnsmasq.conf:/etc/dnsmasq.conf
      - dnsmasq-var-{{ dnsmasq_.id }}:/var/lib/dnsmasq
  register: dnsmasq_container_result

- name: Create/update dnsmasq Systemd service
  containers.podman.podman_generate_systemd:
    name: "dnsmasq-{{ dnsmasq_.id }}"
    container_prefix: "podman"
    # Service is effectively: podman-dnsmasq-{{ dnsmasq_.id }}.service
    no_header: true
    force: true
    restart_policy: on-failure
    restart_sec: 10
    dest: /opt/lafayette/dnsmasq/{{ dnsmasq_.id }}/

  register: dnsmasq_service_result

- name: Link Systemd service
  ansible.builtin.file:
    path: /etc/systemd/system/podman-dnsmasq-{{ dnsmasq_.id }}.service
    state: link
    src: /opt/lafayette/dnsmasq/{{ dnsmasq_.id }}/podman-dnsmasq-{{ dnsmasq_.id }}.service

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true

- name: Restart dnsmasq
  when: dhcp_config_result.changed or dnsmasq_container_result.changed or dnsmasq_service_result.changed
  ansible.builtin.systemd:
    name: podman-dnsmasq-{{ dnsmasq_.id }}.service
    state: restarted
