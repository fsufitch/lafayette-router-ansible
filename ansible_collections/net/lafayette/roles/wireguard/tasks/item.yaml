# Expects 'wireguard_item' as one of the config objects

- name: "Check that Wireguard vlan configuration exists ({{ wireguard_item.id }})"
  ansible.builtin.stat:
    path: "{{ wireguard_item.dir }}/wg-vlan.yaml"
  register: vlan_stat_result

- name: "Initialize non-existent configuration ({{ wireguard_item.id }})"
  vars:
    wg_vlan_yaml_exists: "{{ (vlan_stat_result.stat.isreg is defined) and vlan_stat_result.stat.isreg }}"
  when: not wg_vlan_yaml_exists
  notify: "net.lafayette.wireguard :: Regenerate"
  block:
    - name: "Define new random private key ({{ wireguard_item.id }})"
      when: "(not wg_vlan_yaml_exists) and (not wireguard_item.private_key)"
      ansible.builtin.command:
        cmd: wg genkey
      changed_when: true
      register: wg_genkey_result

    - name: "Ensure Wireguard dir exists ({{ wireguard_item.id }})"
      ansible.builtin.file:
        path: "{{ wireguard_item.dir }}"
        state: directory
        mode: ug+rwx,o-rwx
        owner: root

    - name: "Initialize configuration ({{ wireguard_item.id }})"
      ansible.builtin.command:
        cmd: >-
          {{ golang_gopath | quote }}/bin/wg-vlan init
          --vlan-config {{ wireguard_item.dir | quote }}/wg-vlan.yaml
          --network {{ wireguard_item.network | quote }}
          --port {{ wireguard_item.port | quote }}
          --endpoint {{ wireguard_item.public_endpoint or ipify_public_ip }}:{{ wireguard_item.port }}
          --private-key {{ wireguard_item.private_key or wg_genkey_result.stdout }}
        creates: "{{ wireguard_item.dir }}/wg-vlan.yaml"

- name: "Trigger wg-quick reload ({{ wireguard_item.id }})"
  loop:
    - "head -n1 /etc/wireguard/{{ wireguard_item.interface_name }}.conf"
    - "systemctl status wg-quick@{{ wireguard_item.interface_name }}"
    - "ip link show dev {{ wireguard_item.interface_name }}"
  loop_control:
    label: "{{ item }}"
    loop_var: wg_quick_check_cmd
  ansible.builtin.command:
    cmd: "{{ wg_quick_check_cmd }}"
  register: wg_quick_check
  failed_when: false
  changed_when: wg_quick_check.rc != 0
  notify: "net.lafayette.wireguard :: Regenerate"
